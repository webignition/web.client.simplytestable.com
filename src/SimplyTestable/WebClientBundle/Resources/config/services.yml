imports:
    - { resource: services/commands.yml }

services:
  simplytestable.services.httpClientService:
    class:  SimplyTestable\WebClientBundle\Services\HttpClientService

  simplytestable.services.webresourceservice:
    class:   SimplyTestable\WebClientBundle\Services\WebResourceService
    arguments:
        httpClientService: "@simplytestable.services.httpClientService"
        contentTypeWebResourceMap: %content_type_web_resource_map%

  simplytestable.services.testservice:
    class:   SimplyTestable\WebClientBundle\Services\TestService
    arguments:
        entityManager: "@doctrine.orm.entity_manager"
        logger: "@logger"
        taskService: "@simplytestable.services.taskservice"
        remoteTestService: "@simplytestable.services.remotetestservice"

  simplytestable.services.remotetestservice:
    class:   SimplyTestable\WebClientBundle\Services\RemoteTestService
    arguments:
        coreApplicationHttpClient: '@SimplyTestable\WebClientBundle\Services\CoreApplicationHttpClient'
        jsonResponseHandler: '@SimplyTestable\WebClientBundle\Services\JsonResponseHandler'

  simplytestable.services.taskservice:
    class:   SimplyTestable\WebClientBundle\Services\TaskService
    arguments:
        entityManager: "@doctrine.orm.entity_manager"
        taskOutputResultParserService: "@SimplyTestable\WebClientBundle\Services\TaskOutput\ResultParser\Factory"
        coreApplicationHttpClient: '@SimplyTestable\WebClientBundle\Services\CoreApplicationHttpClient'
        jsonResponseHandler: '@SimplyTestable\WebClientBundle\Services\JsonResponseHandler'

  simplytestable.services.taskcollectionfilterservice:
    class:   SimplyTestable\WebClientBundle\Services\TaskCollectionFilterService
    arguments:
        entityManager: "@doctrine.orm.entity_manager"

  simplytestable.services.cachevalidatorheadersservice:
    class:   SimplyTestable\WebClientBundle\Services\CacheValidatorHeadersService
    arguments:
        entityManager: "@doctrine.orm.entity_manager"

  simplytestable.services.resque.queueService:
    class:   SimplyTestable\WebClientBundle\Services\Resque\QueueService
    arguments:
      resque: "@bcc_resque.resque"
      environment: "%kernel.environment%"
      logger: "@logger"
      jobFactoryService: "@simplytestable.services.resque.jobFactoryService"

  simplytestable.services.resque.jobFactoryService:
    class:  SimplyTestable\WebClientBundle\Services\Resque\JobFactoryService
    arguments:
      jobClassMap: "%resque-job-class-map%"

  simplytestable.services.userservice:
    class:  SimplyTestable\WebClientBundle\Services\UserService
    arguments:
        webResourceService: "@simplytestable.services.webresourceservice"
        adminUserUsername: %admin_user_username%
        adminUserPassword: %admin_user_password%
        session: "@session"
        userSerializerService: "@simplytestable.services.userserializerservice"
        coreApplicationRouter: '@SimplyTestable\WebClientBundle\Services\CoreApplicationRouter'

  simplytestable.services.useremailchangerequestservice:
    class:  SimplyTestable\WebClientBundle\Services\UserEmailChangeRequestService
    arguments:
        coreApplicationHttpClient: '@SimplyTestable\WebClientBundle\Services\CoreApplicationHttpClient'
        jsonResponseHandler: '@SimplyTestable\WebClientBundle\Services\JsonResponseHandler'

  simplytestable.services.userserializerservice:
    class:  SimplyTestable\WebClientBundle\Services\UserSerializerService
    arguments:
        key: %secret%

  simplytestable.services.testoptions.adapter.request.featureOptionsParser:
    class:  SimplyTestable\WebClientBundle\Services\TestOptions\Adapter\Request\FeatureParser\OptionsParser

  simplytestable.services.testoptions.adapter.request.cookieOptionsParser:
    class:  SimplyTestable\WebClientBundle\Services\TestOptions\Adapter\Request\FeatureParser\CookieOptionsParser

  simplytestable.services.testoptions.adapter.request:
    class:  SimplyTestable\WebClientBundle\Services\TestOptions\Adapter\Request\Adapter
    calls:
      - [addFeatureOptionsParser, ["@simplytestable.services.testoptions.adapter.request.featureOptionsParser"]]
      - [addFeatureOptionsParser, ["@simplytestable.services.testoptions.adapter.request.cookieOptionsParser", "cookies"]]

  simplytestable.services.userplansubscriptionservice:
    class:  SimplyTestable\WebClientBundle\Services\UserPlanSubscriptionService
    arguments:
        stripeErrorFactory: '@simplytestable.services.stripeerrorfactory'
        coreApplicationHttpClient: '@SimplyTestable\WebClientBundle\Services\CoreApplicationHttpClient'

  simplytestable.services.useraccountcardservice:
    class:  SimplyTestable\WebClientBundle\Services\UserAccountCardService
    arguments:
        webResourceService: "@simplytestable.services.webresourceservice"
        stripeErrorFactory: '@simplytestable.services.stripeerrorfactory'
        coreApplicationRouter: '@SimplyTestable\WebClientBundle\Services\CoreApplicationRouter'

  simplytestable.services.userstripeeventservice:
    class:  SimplyTestable\WebClientBundle\Services\UserStripeEventService
    arguments:
        coreApplicationHttpClient: '@SimplyTestable\WebClientBundle\Services\CoreApplicationHttpClient'
        jsonResponseHandler: '@SimplyTestable\WebClientBundle\Services\JsonResponseHandler'

  simplytestable.services.documentationurlcheckerservice:
    class:  SimplyTestable\WebClientBundle\Services\DocumentationUrlCheckerService

  simplytestable.services.mailchimp.client:
    class: ZfrMailChimp\Client\MailChimpClient
    arguments:
      apiKey: "%mailchimp_api_key%"

  simplytestable.services.mailchimpservice:
    class:   SimplyTestable\WebClientBundle\Services\MailChimp\Service
    arguments:
        mailChimpClient: '@simplytestable.services.mailchimp.client'
        listRecipientsService: "@simplytestable.services.mailchimp.listRecipients"

  simplytestable.services.mail.configuration:
    class:   SimplyTestable\WebClientBundle\Services\Mail\Configuration
    arguments:
        configuration: "%mail%"

  simplytestable.services.postmark.sender:
    class:   SimplyTestable\WebClientBundle\Services\Postmark\Sender

  simplytestable.services.mail.service:
    class:   SimplyTestable\WebClientBundle\Services\Mail\Service
    arguments:
        mailConfiguration: "@simplytestable.services.mail.configuration"
        postmarkMessage: "@postmark.message"
        postmarkSender: "@simplytestable.services.postmark.sender"

  simplytestable.listener.stripeEvent:
    class:   SimplyTestable\WebClientBundle\EventListener\Stripe\Listener
    arguments:
        logger: "@logger"
        templating: "@templating"
        router: "@router"
        mailService: "@simplytestable.services.mail.service"
    tags:
      - { name: kernel.event_listener, event: stripe.customer.subscription.created, method: onCustomerSubscriptionCreated }
      - { name: kernel.event_listener, event: stripe.customer.subscription.deleted, method: onCustomerSubscriptionDeleted }
      - { name: kernel.event_listener, event: stripe.customer.subscription.trial_will_end, method: onCustomerSubscriptionTrialWillEnd }
      - { name: kernel.event_listener, event: stripe.customer.subscription.updated, method: onCustomerSubscriptionUpdated }
      - { name: kernel.event_listener, event: stripe.invoice.payment_succeeded, method: onInvoicePaymentSucceeded }
      - { name: kernel.event_listener, event: stripe.invoice.payment_failed, method: onInvoicePaymentFailed }

  simplytestable.controller.action_listener:
    class: SimplyTestable\WebClientBundle\EventListener\RequestListener
    arguments:
        kernel: @kernel
    tags:
      - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

  simplytestable.listener.mailchimpEvent:
    class:   SimplyTestable\WebClientBundle\EventListener\MailChimp\Listener
    arguments:
        logger: "@logger"
        mailchimpListRecipientsService: "@simplytestable.services.mailchimp.listRecipients"
        entityManager: '@doctrine.orm.entity_manager'
    tags:
      - { name: kernel.event_listener, event: mailchimp.subscribe, method: onSubscribe }
      - { name: kernel.event_listener, event: mailchimp.unsubscribe, method: onUnsubscribe }
      - { name: kernel.event_listener, event: mailchimp.upemail, method: onUpEmail }
      - { name: kernel.event_listener, event: mailchimp.cleaned, method: onCleaned }

  simplytestable.services.mailchimp.listRecipients:
    class:   SimplyTestable\WebClientBundle\Services\MailChimp\ListRecipientsService
    arguments:
        entityManager: "@doctrine.orm.entity_manager"
        logger: "@logger"
        listIdentifiers:
          announcements: "%mailchimp_announcements_list_id%"
          updates: "%mailchimp_updates_list_id%"
          introduction: "%mailchimp_introduction_list_id%"

  simplytestable.services.responseFormatService:
    class:   SimplyTestable\WebClientBundle\Services\ResponseFormatService
    calls:
      - [setRequest, [@request]]
    public: true
    scope: request

  simplytestable.services.tasktypeservice:
    class:  SimplyTestable\WebClientBundle\Services\TaskTypeService
    calls:
      - [setTaskTypes, [%task_types%]]
      - [setEarlyAccessUsers, [%early_access_users%]]

  simplytestable.services.teamservice:
    class:   SimplyTestable\WebClientBundle\Services\TeamService
    arguments:
        webResourceService: "@simplytestable.services.webresourceservice"
        coreApplicationRouter: '@SimplyTestable\WebClientBundle\Services\CoreApplicationRouter'

  simplytestable.services.teaminviteservice:
    class:   SimplyTestable\WebClientBundle\Services\TeamInviteService
    arguments:
        webResourceService: "@simplytestable.services.webresourceservice"
        userService: "@simplytestable.services.userservice"
        coreApplicationRouter: '@SimplyTestable\WebClientBundle\Services\CoreApplicationRouter'

  simplytestable.services.couponService:
    class:  SimplyTestable\WebClientBundle\Services\CouponService
    calls:
      - [setCouponData, [%coupons%]]

  simplytestable.services.plansService:
    class:  SimplyTestable\WebClientBundle\Services\PlansService
    calls:
      - [setPlansData, [%plans%]]

  simplytestable.services.stripeerrorfactory:
    class: SimplyTestable\WebClientBundle\Services\StripeErrorFactory

  simplytestable.services.testoptions.adapter.factory:
    class: SimplyTestable\WebClientBundle\Services\TestOptions\Adapter\Factory
    arguments:
      adapter: '@simplytestable.services.testoptions.adapter.request'
      taskTypeService: '@simplytestable.services.tasktypeservice'
      parameters: '%test_options%'

  simplytestable.services.urlviewvalues:
    class: SimplyTestable\WebClientBundle\Services\UrlViewValuesService

  simplytestable.services.cachevalidator:
    class: SimplyTestable\WebClientBundle\Services\CacheValidatorService
    arguments:
      cacheValidatorHeadersService: '@simplytestable.services.cachevalidatorheadersservice'
      userService: '@simplytestable.services.userservice'

  simplytestable.services.flashbagvalues:
    class: SimplyTestable\WebClientBundle\Services\FlashBagValues
    arguments:
      session: '@session'

  SimplyTestable\WebClientBundle\Services\TaskOutput\ResultParser\HtmlValidationResultParser:
    class: SimplyTestable\WebClientBundle\Services\TaskOutput\ResultParser\HtmlValidationResultParser

  SimplyTestable\WebClientBundle\Services\TaskOutput\ResultParser\CssValidationResultParser:
    class: SimplyTestable\WebClientBundle\Services\TaskOutput\ResultParser\CssValidationResultParser

  SimplyTestable\WebClientBundle\Services\TaskOutput\ResultParser\JsStaticAnalysisResultParser:
    class: SimplyTestable\WebClientBundle\Services\TaskOutput\ResultParser\JsStaticAnalysisResultParser

  SimplyTestable\WebClientBundle\Services\TaskOutput\ResultParser\LinkIntegrityResultParser:
    class: SimplyTestable\WebClientBundle\Services\TaskOutput\ResultParser\LinkIntegrityResultParser

  SimplyTestable\WebClientBundle\Services\TaskOutput\ResultParser\Factory:
    class:   SimplyTestable\WebClientBundle\Services\TaskOutput\ResultParser\Factory
    calls:
      - [addResultParser, ['@SimplyTestable\WebClientBundle\Services\TaskOutput\ResultParser\HtmlValidationResultParser']]
      - [addResultParser, ['@SimplyTestable\WebClientBundle\Services\TaskOutput\ResultParser\CssValidationResultParser']]
      - [addResultParser, ['@SimplyTestable\WebClientBundle\Services\TaskOutput\ResultParser\JsStaticAnalysisResultParser']]
      - [addResultParser, ['@SimplyTestable\WebClientBundle\Services\TaskOutput\ResultParser\LinkIntegrityResultParser']]

  SimplyTestable\WebClientBundle\Services\ResourceLocator:
    class: SimplyTestable\WebClientBundle\Services\ResourceLocator
    arguments:
      - '@kernel'

  SimplyTestable\WebClientBundle\Services\ApplicationConfigurationService:
    class: SimplyTestable\WebClientBundle\Services\ApplicationConfigurationService
    arguments:
      - "@=service('kernel').getRootDir()"
      - "@=service('kernel').getCacheDir()"

  SimplyTestable\WebClientBundle\Services\CoreApplicationRouter:
    class: SimplyTestable\WebClientBundle\Services\CoreApplicationRouter
    arguments:
      - '%core_url%'
      - '@SimplyTestable\WebClientBundle\Services\ResourceLocator'
      - '@SimplyTestable\WebClientBundle\Services\ApplicationConfigurationService'

  SimplyTestable\WebClientBundle\Services\CoreApplicationResponseCache:
    class: SimplyTestable\WebClientBundle\Services\CoreApplicationResponseCache

  SimplyTestable\WebClientBundle\Services\CoreApplicationHttpClient:
    class: SimplyTestable\WebClientBundle\Services\CoreApplicationHttpClient
    arguments:
      - '@SimplyTestable\WebClientBundle\Services\CoreApplicationRouter'
      - '@SimplyTestable\WebClientBundle\Services\CoreApplicationResponseCache'
      - '%admin_user_username%'
      - '%admin_user_password%'

  SimplyTestable\WebClientBundle\Services\JsonResponseHandler:
    class: SimplyTestable\WebClientBundle\Services\JsonResponseHandler
