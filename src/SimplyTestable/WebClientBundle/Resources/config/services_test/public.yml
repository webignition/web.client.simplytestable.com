## Services that need to be public to allow them to be retrieved from the container in functional tests
services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: true

  SimplyTestable\WebClientBundle\Command\:
    resource: '../../../Command'
    autowire: true
    public: true
    tags:
      - { name: console.command }

  SimplyTestable\WebClientBundle\Services\TestService:

  SimplyTestable\WebClientBundle\Services\RemoteTestService:

  SimplyTestable\WebClientBundle\Services\TaskService:

  SimplyTestable\WebClientBundle\Services\CacheValidatorHeadersService:

  SimplyTestable\WebClientBundle\Services\UserService:

  SimplyTestable\WebClientBundle\Services\UserEmailChangeRequestService:

  SimplyTestable\WebClientBundle\Services\UserPlanSubscriptionService:

  SimplyTestable\WebClientBundle\Services\UserAccountCardService:

  SimplyTestable\WebClientBundle\Services\UserStripeEventService:

  SimplyTestable\WebClientBundle\Services\MailChimp\Service:

  SimplyTestable\WebClientBundle\Services\Mail\Service:

  SimplyTestable\WebClientBundle\Services\PostmarkSender:

  SimplyTestable\WebClientBundle\Services\TaskTypeService:
    calls:
      - [setTaskTypes, ['%task_types%']]
      - [setEarlyAccessUsers, ['%early_access_users%']]

  SimplyTestable\WebClientBundle\Services\CoreApplicationHttpClient:

  SimplyTestable\WebClientBundle\Services\TeamService:

  SimplyTestable\WebClientBundle\Services\UserManager:

  SimplyTestable\WebClientBundle\Services\TeamInviteService:

  SimplyTestable\WebClientBundle\Services\CouponService:
    calls:
      - [setCouponData, ['%coupons%']]

  SimplyTestable\WebClientBundle\Services\PlansService:
    calls:
      - [setPlansData, ['%plans%']]

  SimplyTestable\WebClientBundle\Services\TestOptions\RequestAdapterFactory:

  SimplyTestable\WebClientBundle\Services\TaskOutput\ResultParser\Factory:
    calls:
      - [addResultParser, ['@SimplyTestable\WebClientBundle\Services\TaskOutput\ResultParser\HtmlValidationResultParser']]
      - [addResultParser, ['@SimplyTestable\WebClientBundle\Services\TaskOutput\ResultParser\CssValidationResultParser']]
      - [addResultParser, ['@SimplyTestable\WebClientBundle\Services\TaskOutput\ResultParser\JsStaticAnalysisResultParser']]
      - [addResultParser, ['@SimplyTestable\WebClientBundle\Services\TaskOutput\ResultParser\LinkIntegrityResultParser']]

  SimplyTestable\WebClientBundle\Services\ResourceLocator:

  SimplyTestable\WebClientBundle\Services\CoreApplicationRouter:
    arguments:
      - '%core_url%'
      - '@SimplyTestable\WebClientBundle\Services\ResourceLocator'
      - '%kernel.cache_dir%'

  SimplyTestable\WebClientBundle\Services\SystemUserService:
    class:  SimplyTestable\WebClientBundle\Services\SystemUserService
    arguments:
      - '%admin_user_username%'
      - '%admin_user_password%'

  SimplyTestable\WebClientBundle\Services\UserSerializerService:
    arguments:
      - '%secret%'

  SimplyTestable\WebClientBundle\Services\MailChimp\Client:
    arguments:
      - '%mailchimp_api_key%'

  SimplyTestable\WebClientBundle\Services\MailChimp\ListRecipientsService:
    arguments:
      - '@doctrine.orm.entity_manager'
      - '@logger'
      -
        announcements: '%mailchimp_announcements_list_id%'
        updates: '%mailchimp_updates_list_id%'
        introduction: '%mailchimp_introduction_list_id%'

  SimplyTestable\WebClientBundle\Services\Mail\Configuration:
    arguments:
      - '%mail%'

  SimplyTestable\WebClientBundle\Services\TestOptions\RequestAdapter:
    calls:
      - [addFeatureOptionsParser, ['@SimplyTestable\WebClientBundle\Services\TestOptions\OptionsParser']]
      - [addFeatureOptionsParser, ['@SimplyTestable\WebClientBundle\Services\TestOptions\CookieOptionsParser', 'cookies']]
